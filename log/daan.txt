12.     Scanner sc = new Scanner(System.in);
   		double x = sc.nextDouble();
   		double y = 0;
   		if (x >= 0 && x <= 10) {
   			y = x * 0.1;
   		} else if (x <= 20) {
   			y = (20 - x) * 0.075 + 10 * 0.1;
   		} else if (x <= 40) {
   			y = 10 * 0.1 + 10 * 0.075 + (x - 20) * 0.05;
   		} else if (x <= 60) {
   			y = 10 * 0.1 + 10 * 0.075 + 20 * 0.05 + (x - 40) * 0.03;
   		} else if (x <= 100) {
   			y = 10 * 0.1 + 10 * 0.075 + 20 * 0.05 + 20 * 0.03 + (x - 60) * 0.015;
   		} else if (x > 100) {
   			y = 10 * 0.1 + 10 * 0.075 + 20 * 0.05 + 20 * 0.03 + 40 * 0.015 + (x - 100) * 0.01;
   		}
   		System.out.println(y);
13.     int m;
   		int i = -100;
   		while (i <= 10000) {
   			if (Math.sqrt(i + 100) % 1 == 0 & Math.sqrt(i + 268) % 1 == 0) {
   				System.out.println(i);
   			}
   			i++;
   		}
14.Scanner sc = new Scanner(System.in);
   		int year, month, day,d=0;
   		boolean key = false;
   		do {
   			key = false;
   			System.out.println("请输入年：");year = sc.nextInt();
   			System.out.println("请输入月：");month = sc.nextInt();
   			System.out.println("请输入日：");day = sc.nextInt();
   			if (year < 0 || month < 0 || month > 12 || day < 0 || day > 31) {
   				System.out.println("输入日期不符合标准，请重新输入：");
   				key = true;
   			}
   		} while (key);
   		for (int i = 1; i <= month; i++) {
   			switch (month) {
   			case 1:case 3:case 5:case 7:case 8:case 10:case 12:
   				day = 31;break;
   			case 4:case 6:case 9:case 11:
   				day = 30;break;
   			case 2: {
   				if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
   					day = 29;
   				} else {
   					day = 28;
   				}
   			}break;
   			}
   			d += day;
   		}
   		System.out.println(d);
   	}


15.Scanner input = new Scanner(System.in);
   		int x = input.nextInt();
   		int y = input.nextInt();
   		int z = input.nextInt();
   		int t = 0;
   		if (x > y) {
   			t = x;
   			x = y;
   			y = t;
   		}
   		if (y > z) {
   			t = z;
   			z = y;
   			y = t;
   		}
   		if (x > y) {
   			t = x;
   			x = y;
   			y = t;
   		}
   		System.out.println(x + "" + y + "" + z);

16.for (int i = 1; i <= 9; i++) {
   			for (int j = 1; j <= i; j++) {
   				System.out.print(i * j + " ");
   			}
   			System.out.println();
   		}
17.int sum = 1;
   		for (int i = 1; i <= 9; i++) {
   			sum = (sum + 1) * 2;
   		}
   		System.out.println("第一天共摘了" + sum + "个桃子");
18.char a, b, c;
   		for (a = 'x'; a <= 'z'; a++) {
   			for (b = 'x'; b <= 'z'; b++) {
   				for (c = 'x'; c <= 'z'; c++) {
   					if (a != b && b != c && a != c) { // 避免参赛队员重复比赛
   						if (a != 'x' && c != 'x' && c != 'z') { // 根据题意判断
   							System.out.println("a和" + a + "，b和" + b + "，c和" + c + "进行比赛");
   						}
   					}
   				}
   			}
   		}

19.int c = 4;
   		for (int i = 1; i <= c; i++) {
   			for (int j = 1; j <= c - i; j++) {
   				System.out.print(" ");
   			}
   			for (int k = 1; k <= 2 * i - 1; k++) {
   				System.out.print('*');
   			}
   			System.out.println();
   		}
   		for (int i = 1; i < c; i++) {
   			for (int j = 1; j <= i; j++) {
   				System.out.print(" ");
   			}
   			for (int k = 1; k <= 7 - 2 * i; k++) {
   				System.out.print('*');
   			}
   			System.out.println();
   		}
   	}

20.int zi = 2, mu = 1;
   		int temp = 0;
   		double sum = 0;
   		for (int i = 0; i < 20; i++) {
   			sum += zi / mu;
   			temp = zi;
   			zi += mu;
   			mu = temp;
   		}
   		System.out.println(sum);

21.Scanner sc = new Scanner(System.in);
   		int x = 20;
   		long m = 0;
   		for (int i = 1; i <= x; i++) {
   			m += di(i);
   		}
   		System.out.println(m);
   	}

   	public static long di(int x) {
   		long sum = 1;
   		for (int i = 1; i <= x; i++) {
   			sum *= i;
   		}
   		return sum;
   	}

22.test22 t = new test22();
   		System.out.println(t.d(5));
   	}

   	public int d(int x) {
   		if (x == 1)
   			return 1;
   		else
   			return x * d(x - 1);
   	}

23.test23 t = new test23();
   		System.out.println(t.d(5));
   	}

   	public int d(int x) {
   		if (x == 1)
   			return 10;
   		else
   			return 2 + d(x - 1);
   	}

24.Scanner sc = new Scanner(System.in);
   		String s = sc.nextLine();
   		char[] ch = s.toCharArray();
   		System.out.println(ch.length);
   		for (int i = 0; i < ch.length; i++) {
   			System.out.print(ch[ch.length - 1 - i] + " ");
   		}

25.Scanner sc = new Scanner(System.in);
   		String s = sc.nextLine();
   		char[] ch = s.toCharArray();
   		if (ch[0] == ch[4] && ch[1] == ch[3]) {
   			System.out.println(s + "是回文数");
   		} else {
   			System.out.println(s + "不是回文数");
   		}

26.	getChar tw = new getChar();
   		System.out.println("请输入星期的第一个大写字母：");
   		char ch = tw.getChar();
   		switch (ch) {
   		case 'M':
   			System.out.println("Monday");
   			break;
   		case 'W':
   			System.out.println("Wednesday");
   			break;
   		case 'F':
   			System.out.println("Friday");
   			break;
   		case 'T': {
   			System.out.println("请输入星期的第二个字母：");
   			char ch2 = tw.getChar();
   			if (ch2 == 'U') {
   				System.out.println("Tuesday");
   			} else if (ch2 == 'H') {
   				System.out.println("Thursday");
   			} else {
   				System.out.println("无此写法！");
   			}
   		}
   			;
   			break;
   		case 'S': {
   			System.out.println("请输入星期的第二个字母：");
   			char ch2 = tw.getChar();
   			if (ch2 == 'U') {
   				System.out.println("Sunday");
   			} else if (ch2 == 'A') {
   				System.out.println("Saturday");
   			} else {
   				System.out.println("无此写法！");
   			}
   		}
   			;
   			break;
   		default:
   			System.out.println("无此写法！");
   		}
   	}
   }

   class getChar {
   	public char getChar() {
   		Scanner s = new Scanner(System.in);
   		String str = s.nextLine();
   		char ch = str.charAt(0);
   		if (ch < 'A' || ch > 'Z') {
   			System.out.println("输入错误，请重新输入");
   			ch = getChar();
   		}
   		return ch;
   	}

27.int m = 0, j, count = 0;
   		System.out.print("2 ");
   		for (int i = 3; i <= 100; i++) {
   			for (j = 2; j < i; j++) {
   				if (i % j == 0) {
   					break;
   				}
   			}
   			if (j == i) {
   				System.out.print(i + " ");
   				count++;
   			}

   		}

28.     选择法：
        int[] m = { 1, 5, 4, 6, 7, 4, 5, 8, 56, 45 };
   		for (int i = 0; i < m.length; i++) {
   			int k = i;
   			for (int j = i + 1; j < m.length; j++) {
   				if (m[j] < m[k]) {
   					k = j;
   					int temp = m[j];
   					m[j] = m[i];
   					m[i] = temp;
   				}
   			}
   		}
   		for (int i = 0; i < m.length; i++) {
   			System.out.print(m[i] + " ");
   		}
   冒泡法：
    int[] m = { 1, 5, 4, 6, 7, 4, 5, 8, 56, 45 };
   		for (int i = 0; i < m.length; i++) {
   			for (int j = 0; j < m.length - 1 - i; j++) {
   				if (m[j] > m[j + 1]) {
   					int temp = m[j];
   					m[j] = m[j + 1];
   					m[j + 1] = temp;
   				}
   			}
   		}
   		for (int i = 0; i < m.length; i++) {
   			System.out.print(m[i] + " ");
   		}

29.Scanner sc = new Scanner(System.in);
   		int[][] m = new int[3][3];
   		for (int i = 0; i < 3; i++) {
   			for (int j = 0; j < 3; j++) {
   				m[i][j] = sc.nextInt();
   			}
   		}
   		for (int i = 0; i < 3; i++) {
   			for (int j = 0; j < 3; j++) {
   				if (i == j) {
   					System.out.println(m[i][j]);
   				}
   			}
   		}

30.Scanner sc = new Scanner(System.in);
   		int x = sc.nextInt();
   		int[] m = { 1, 2, 6, 9, 12, 34, 56, 78, 90 };
   		int[] n = new int[m.length + 1];
   		int mark = 0;
   		for (int i = 0; i < m.length; i++) {
   			if (x > m[i])
   				mark = i + 1;
   		}
   		n[mark] = x;
   		for (int i = 0; i < mark; i++) {
   			n[i] = m[i];
   		}
   		for (int i = mark + 1; i < n.length; i++) {
   			n[i] = m[i - 1];
   		}
   		for (int i = 0; i < n.length; i++) {
   			System.out.print(n[i] + " ");
   		}

31.int x;
   		Scanner sc = new Scanner(System.in);
   		x = sc.nextInt();
   		int[] m = new int[x];
   		for (int i = 0; i < m.length; i++) {
   			m[i] = sc.nextInt();
   		}
   		for (int i = 0; i < m.length; i++) {
   			System.out.print(m[(m.length - 1 - i)] + " ");
   		}

32.
   Scanner sc = new Scanner(System.in);
   		String s = sc.nextLine();
   		char[] ch = s.toCharArray();
   		if (ch.length < 7) {
   			System.out.println("输入的数字不符合标准");
   			System.exit(-1);
   		}

   		for (int i = 0; i < ch.length; i++) {
   			if (i >= ch.length - 7 && i <= ch.length - 4) {
   				System.out.print(ch[i]);
   			}
   		}

33.int[][] a = new int[10][10];
   		for (int i = 0; i < 10; i++) {
   			a[i][i] = 1;
   			a[i][0] = 1;
   		}
   		for (int i = 2; i < 10; i++) {
   			for (int j = 1; j < i; j++) {
   				a[i][j] = a[i - 1][j - 1] + a[i - 1][j];
   			}
   		}
   		for (int i = 0; i < 10; i++) {
   			for (int k = 0; k < 2 * (a.length - i) - 1; k++) {
   				System.out.print(" ");
   			}
   			for (int j = 0; j <= i; j++) {
   				System.out.print(a[i][j] + "   ");
   			}
   			System.out.println();
   		}

34.Scanner input = new Scanner(System.in);
   		int a = input.nextInt();
   		int b = input.nextInt();
   		int c = input.nextInt();
   		if (a > b) {
   			int t = a;
   			a = b;
   			b = t;
   		}
   		if (b > c) {
   			int t = b;
   			b = c;
   			c = t;
   		}
   		if (a > b) {
   			int t = a;
   			a = b;
   			b = t;
   		}
   		System.out.println(a + " " + b + " " + c);

35.Scanner sc = new Scanner(System.in);
   		int[] m = new int[5];
   		for (int i = 0; i < m.length; i++) {
   			m[i] = sc.nextInt();
   		}
   		int max = 0, min = 0;
   		for (int i = 1; i < m.length; i++) {
   			if (m[i] > m[max])
   				max = i;
   			else if (m[i] < m[min])
   				min = i;
   		}
   		int t = m[0];
   		m[0] = m[max];
   		m[max] = t;
   		t = m[m.length - 1];
   		m[m.length - 1] = m[min];
   		m[min] = t;
   		if (max == m.length - 1 && min == 0) {
   			t = m[min];
   			m[min] = m[max];
   			m[max] = t;
   		}
   		for (int i = 0; i < m.length; i++) {
   			System.out.print(m[i] + " ");
   		}
   	}

36.Scanner sc = new Scanner(System.in);
   		System.out.println("请输入数组的大小");
   		int x = sc.nextInt();
   		System.out.println("请输入调换的位数");
   		int y = sc.nextInt();
   		int[] m = new int[x];
   		System.out.println("请输入数组");
   		for (int i = 0; i < m.length; i++) {
   			m[i] = sc.nextInt();
   		}
   		int[] n = new int[m.length];
   		int j, i = 0;
   		for (j = 0; j < y; j++) {
   			n[j] = m[x - y + j];
   		}
   		for (; j < n.length; j++) {
   			n[j] = m[i];
   			i++;
   		}
   		for (i = 0; i < n.length; i++) {
   			System.out.println(n[i]);
   		}

37.Scanner input = new Scanner(System.in);
   		int n = input.nextInt();
   		boolean[] arr = new boolean[n];
   		for (int i = 0; i < arr.length; i++) {
   			arr[i] = true;
   		}
   		int Count = n;
   		int index = 0;
   		int countNum = 0;
   		while (Count > 1) {
   			if (arr[index] == true) {
   				countNum++;
   				if (countNum == 3) {
   					arr[index] = false;
   					Count--;
   					countNum = 0;
   				}
   			}
   			index++;
   			if (index == n) {
   				index = 0;
   			}
   		}
   		for (int i = 0; i < n; i++) {
   			if (arr[i] == true) {
   				System.out.println(i + 1);
   			}
   		}

38. Scanner input =new Scanner(System.in);
           String s=input.nextLine();
           System.out.println(s.length());
39.Scanner sc =new Scanner(System.in);
           int n=sc.nextInt();
           System.out.println(sum(n));
       }
       public static double sum(int n) {
           double m=0;
           if(n%2==0) {
               for(int i=2;i<=n;i+=2) {
                   m+=(double)1/i;
               }
           }else {
               for(int i=1;i<=n;i+=2) {
                   m+=(double)1/i;
               }
           }
           return m;

40.Scanner input = new Scanner(System.in);
   		String[] toStrings = new String[5];
   		String temp = null;
   		toStrings[0] = "afdfdcv";
   		toStrings[1] = "ghaf";
   		toStrings[2] = "fdasfas";
   		toStrings[3] = "tyrdfas";
   		toStrings[4] = "fadsfsd";
   		for (int i = 0; i < 5; i++) {
   			for (int j = i + 1; j < 5; j++) {
   				if (toStrings[i].compareTo(toStrings[j]) > 0) {
   					temp = toStrings[i];
   					toStrings[i] = toStrings[j];
   					toStrings[j] = temp;
   				}
   			}
   		}
   		for (int i = 0; i < 5; i++) {
   			System.out.println(toStrings[i]);
   		}

41.int temp = 0, j, i = 4, count;
   		while (true) {
   			j = i;//先保存i的值
   			count = 0;//表示判定成功的次数
   			for (int k = 0; k < 5; k++) {
   				temp = i / 4 * 5 + 1;
   				i = temp;
   				if (temp % 4 == 0) {//如果该数是四的倍数
   					count++;
   				} else {
   					break;
   				}
   			}
   			i = j;
   			if (count == 4) {
   				System.out.println(temp);
   				break;
   			}
   			i += 4;//因为变量i表示最后剩的桃子，而该数一定是四的倍数，所以该变量自加四
   		}

42.int i = 10;
   		while (i < 100) {
   			if (8 * i > 10 && 8 * i < 100 && 9 * i >= 100 && 9 * i < 1000) {
   				System.out.println(i + " " + 809 * i);
   				break;
   			}
   			i++;
   		}

43.int m = 0, i = 1;
   		while (i < 76543210) {
   			if (i % 2 != 0) {
   				m++;
   			}
   			i++;
   		}
   		System.out.println(m);
44.Scanner sc = new Scanner(System.in);
   		int n = sc.nextInt();
   		for (int j = 2; j < n; j++) {
   			if (mi(j) && mi(n - j)) {
   				System.out.println(j + " " + (n - j));
   				break;
   			}
   		}
   	}

   	static boolean mi(int i) {
   		for (int j = 2; j < i / 2; i++) {
   			if (i % j == 0) {
   				return false;
   			}
   		}
   		return true;
   	}

45.Scanner sc = new Scanner(System.in);
   		int m = sc.nextInt();
   		int count = 0;
   		while (m % 9 == 0) {
   			count++;
   			m /= 9;
   		}
   		System.out.println(count++);

46.Scanner s = new Scanner(System.in);
           System.out.print("请输入一个字符串：");
           String str1 = s.nextLine();
           System.out.print("请再输入一个字符串：");
           String str2 = s.nextLine();
           String str = str1+str2;
           System.out.println("连接后的字符串是："+str);

47. Scanner s = new Scanner(System.in);
           int n=1,num;
           while(n<=7){
               do{
                   System.out.print("请输入一个1--50之间的整数：");
                   num=s.nextInt();
               }while(num<1||num>50);
               for(int i=1;i<=num;i++)
                  {System.out.print("*");
               }
               System.out.println();
               n ++;
           }

48.Scanner sc = new Scanner(System.in);
   		int[] m = new int[4];
   		while (true) {
   			int s = sc.nextInt();
   			if (s > 999 && s < 9999) {
   				m[0] = s / 1000;
   				m[1] = s / 100 % 10;
   				m[2] = s / 10 % 10;
   				m[3] = s % 10;
   				break;
   			} else {
   				System.out.println("请输入四位数");
   			}
   		}
   		for (int i = 0; i < 4; i++) {
   			m[i] += 5;
   			m[i] %= 10;
   		}
   		int temp;
        		temp = m[0];
        		m[0] = m[3];
        		m[3] = temp;
        		temp = m[1];
        		m[1] = m[2];
        		m[2] = temp;
        		int n = m[0] * 1000 + m[1] * 100 + m[2] * 10 + m[3];
        		System.out.println(n);


49.BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
   		String str1 = r.readLine();
   		String str2 = r.readLine();
   		String[] m = new String[(str1.length() - str2.length() + 1)];
   		int count = 0;
   		for (int i = 0; i < m.length; i++) {
   			m[i] = str1.substring(i, i + str2.length());
   			if (m[i].equals(str2)) {
   				count++;
   				// 因为不计算重叠的子串，所以跳过配对之后的部分拆分子串
   				i = i + str2.length();
   			}
   		}
   		System.out.println(count);


50.class Student {
   	String num;
   	String name;
   	double[] score;
   	double agv;

   	Student() {
   		num = null;
   		name = null;
   		score = new double[3];
   		for (int i = 0; i < 3; i++) {
   			score[i] = 0;
   		}
   	}

   	Student(String num, String name, double s1, double s2, double s3) {//本题目没有要求
   		this.num = num;
   		this.name = null;
   		score = new double[3];
   		score[0] = s1;
   		score[1] = s2;
   		score[2] = s3;
   	}

   	double agv(double[] n) {
   		double v = 0;
   		for (int i = 0; i < n.length; i++) {
   			v += n[i];
   		}
   		return v / n.length;
   	}
   }

   public class test50 {

   	public static void main(String[] args) throws IOException {

   		Student[] student = new Student[5];
   		;
   		for (int i = 0; i < 5; i++) {
   			student[i] = new Student();
   		}
   		Scanner sc = new Scanner(System.in);
   		BufferedReader r = new BufferedReader(new InputStreamReader(System.in));
   		for (int i = 0; i < 5; i++) {
   			System.out.println("请输入第" + (i + 1) + "位同学的成绩");
   			student[i].num = sc.next();
   			student[i].name = sc.next();
   			student[i].score[0] = sc.nextDouble();
   			student[i].score[1] = sc.nextDouble();
   			student[i].score[2] = sc.nextDouble();
   			student[i].agv = (student[i].score[0] + student[i].score[1] + student[i].score[2]) / 3;
   		}
   		try {
   			BufferedWriter w = new BufferedWriter(
   					new OutputStreamWriter(new FileOutputStream("C:\\360Downloads\\stud")));
   			for (int i = 0; i <5; i++) {
   				w.write(student[i].num);
   				w.write(student[i].name);
   				w.write(String.valueOf(student[i].score[0]));//将double类型的分数转换为String类型写入
   				w.write(String.valueOf(student[i].score[1]));//因为write方法不能写入double类型的数值
   				w.write(String.valueOf(student[i].score[2]));
   			}
   			w.flush();
   			w.close();
   			System.out.println("ture");//成功保存输出ture
   		} catch (Exception e) {
   			System.out.println(e.toString());
   		}
   	}
